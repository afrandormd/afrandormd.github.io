[{"categories":[],"content":"Memahami dua arsitektur pemrograman yang sering digunakan serta mengenal kelebihan dan kekurangan dari masing masing arsitektur.","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/"},{"categories":[],"content":"Dalam dunia pengembangan perangkat lunak, pemilihan arsitektur aplikasi menjadi langkah krusial yang akan memengaruhi kinerja, skalabilitas, dan fleksibilitas sebuah sistem. Dua pendekatan utama yang sering dibahas adalah Monolithic dan Microservices. Dalam artikel ini, kita akan memperbandingkan kedua arsitektur ini, melihat kelebihan, kekurangan, serta situasi yang tepat untuk menerapkan masing-masing. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:0:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#"},{"categories":[],"content":"\rPengenalan Monolithic ArsitekturMonolithic Arsitektur ialah cara membuat atau membangun aplikasi yang dimana komponen / modul yang berbeda digabungkan menjadi satu program atau 1 codebase. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:0:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#pengenalan-monolithic-arsitektur"},{"categories":[],"content":"\rContoh Diagram Aplikasi Monolithicflowchart LR; A[Client Web / Mobile App] --\u003e B(Load Balancer) B --\u003e APLIKASI subgraph APLIKASI D\u003eCatalog] E{{Order}} F[/Payment/] end APLIKASI --\u003e G[(Database)] style A fill:#ffe28f,color:#000 style B fill:grey,color:#000 style D fill:#9bbbf3,color:black style E fill:#ad9dd1,color:black style F fill:#a76485,color:black style APLIKASI fill:#d4e6ce,color:#000 style G fill:#e5c9d4,color:#000 Penjelasan Diagram tersebut menggambarkan bagaimana aplikasi monolithic beroperasi. Client (pengguna) terhubung ke aplikasi melalui load balancer. Aplikasi ini memiliki tiga fitur utama (Catalog, Order, Payment) yang berinteraksi dengan database untuk menyimpan dan mengambil data. Ini adalah pendekatan yang umum digunakan dalam pengembangan aplikasi sebelum adanya arsitektur microservices yang lebih modern. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:1:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#contoh-diagram-aplikasi-monolithic"},{"categories":[],"content":"\rKelebihan Aplikasi Monolithic Mudah untuk di develop. Simple untuk di deploy. Simple untuk di scale secara vertikal. Gampang untuk di test. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:2:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#kelebihan-aplikasi-monolithic"},{"categories":[],"content":"\rKekurangan Aplikasi Monolithic Mengintimidasi programmer baru. Overloaded IDE. Ketika deploy, berarti kita mendeploy seluruh code / seluruh aplikasi. Susah ketika mau scale terlebih secara horizontal. Ketika ada error, maka 1 aplikasi akan terpengaruh bahkan mati. Susah untuk mengadopsi teknologi baru. apa itu scale?\r“Scaling” dalam konteks pengembangan aplikasi merujuk pada kemampuan aplikasi untuk menangani pertumbuhan beban kerja atau traffic. Ada dua cara umum untuk melakukan scaling: scaling vertikal (vertical scaling) dan scaling horizontal (horizontal scaling). Scale Vertikal: Meningkatkan spesifikasi seperti kapasitas (RAM, CPU) pada satu instance atau node aplikasi. Scale Horizontal: Menambahkan lebih banyak instance atau node ke dalam aplikasi untuk mendistribusikan beban kerja.\r","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:3:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#kekurangan-aplikasi-monolithic"},{"categories":[],"content":"\rPengenalan Microservices ArsitekturMicroservices arsitektur ialah sebuah arsitektur aplikasi yang dibangun dari kumpulan service - service kecil yang saling terhubung. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:0:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#pengenalan-microservices-arsitektur"},{"categories":[],"content":"\rContoh Diagram Aplikasi Microservicesflowchart LR; subgraph APLIKASI D\u003eCatalog] --\u003e db1[(Database)] E(Order) --\u003e db2[(Database)] F[/Payment/] --\u003e db3[(Database)] end style D fill:#9bbbf3,color:black style E fill:#ad9dd1,color:black style F fill:#a76485,color:black style APLIKASI fill:#fff,color:#000 style db1 fill:grey,color:white style db2 fill:grey,color:white style db3 fill:gray,color:white Penjelasan Dalam arsitektur microservices pada diagram di atas, setiap layanan (Catalog, Order, dan Payment) memiliki tugasnya sendiri dan terpisah, memungkinkan aplikasi untuk lebih modular dan mudah di-maintain. Masing-masing layanan memiliki akses ke database yang khusus untuk fungsinya sendiri. Hal ini memungkinkan pengembang untuk mengubah, memperbarui, atau memperbaiki satu layanan tanpa memengaruhi layanan lainnya. Arsitektur ini membantu dalam pengembangan aplikasi yang lebih fleksibel, scalable, dan dapat dikembangkan oleh tim yang terpisah secara bersamaan. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:1:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#contoh-diagram-aplikasi-microservices"},{"categories":[],"content":"\rKelebihan Aplikasi Microservices Mudah untuk di pahami bagi developer karena 1 service biasanya berukuran kecil. Ketika ada service yang error maka tidak akan berimbas pada service lain. Better Deploy, karena masing - masing service bisa di deploy secara independent. Better Testability, karena service berukuran kecil maka mudah untuk di test. Ringan untuk IDE. Mudah untuk mengadopsi teknologi baru. Mudah untuk scaling secara independent untuk masing - masing service. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:2:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#kelebihan-aplikasi-microservices"},{"categories":[],"content":"\rKekurangan Aplikasi Microservices Testing yang melibatkan interaksi antar service menjadi susah. Tidak mudah mengimplementasikan sebuah fitur / request, yang melibatkan service lain, karena harus di diskusikan secara hati - hati bersama tim. Tidak mudah untuk menghandle jumlah service yang banyak. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:3:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#kekurangan-aplikasi-microservices"},{"categories":[],"content":"\rMonolithic VS Microservicesflowchart LR; subgraph Perbandingan subgraph Monolithic A\u003eCatalog] B[/Order/] C{{Payment}} end title[dengan] subgraph Microservices D\u003eCatalog] E[/Order/] F{{Payment}} end end style Perbandingan fill:#fff,color:black style Microservices fill:#fff,color:#000 style Monolithic fill:#fff,color:#000,stroke:black style title fill:#fff,color:#000,stroke:none style A fill:#88bd71,color:white style D fill:#88bd71,color:white style B fill:#f09834,color:white style E fill:#f09834,color:white style C fill:#c60000,color:white style F fill:#c60000,color:white ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:4:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#monolithic-vs-microservices"},{"categories":[],"content":"\rPerbandingan","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:5:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#perbandingan"},{"categories":[],"content":"\rMonolithic Sebuah aplikasi besar yang biasanya hanya 1 codebase. Sedikit susah untuk scaling berdasarkan kebutuhan. Umumnya hanya mempunyai 1 database. Susah untuk mengganti teknologi yang telah di pakai. Deploy berarti merilis keseluruhan source code. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:5:1","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#monolithic"},{"categories":[],"content":"\rMicroservices Dibangun dari service - service kecil yang di buat berdasarkan domain bisnis. Mudah untuk scaling berdasarkan kebutuhan. Masing - masing service mempunyai database tersendiri. Mudah untuk mengadopsi teknologi baru. Deploy hanya pada service - service yang di ubah saja. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:5:2","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#microservices"},{"categories":[],"content":"\rKesimpulanMonolithic Arsitektur cocok untuk aplikasi sederhana dengan pengembangan yang mudah, namun kurang fleksibel dalam skalabilitas dan adopsi teknologi baru. Sementara itu, Microservices lebih baik untuk aplikasi kompleks yang membutuhkan skalabilitas tinggi, meskipun memerlukan manajemen yang kompleks. Pemilihan antara keduanya harus didasarkan pada kebutuhan aplikasi dan tim pengembang. ","date":"2024-03-08","objectID":"/posts/microservices-vs-monolithic/:6:0","series":[],"tags":["Microservices"],"title":"Memahami Arsitektur Monolithic \u0026 Microservices: Perbandingan, Kelebihan dan kekurangannya","uri":"/posts/microservices-vs-monolithic/#kesimpulan"},{"categories":null,"content":" Junior Database Designer (image)\rJunior Technopreneurship (image)\r","date":"2024-03-07","objectID":"/certificate/:0:0","series":null,"tags":null,"title":"Certification","uri":"/certificate/#"},{"categories":null,"content":"\rProfil SayaSaya Afrando Sharein Ramadhan, seorang mahasiswa yang bersemangat di Jurusan Informatika di Universitas Teknokrat Indonesia. Saya memiliki minat yang besar dalam teknologi informasi, dan berusaha untuk terus belajar dan mengembangkan keterampilan saya. ","date":"2024-03-07","objectID":"/about/:1:0","series":null,"tags":null,"title":"About Me","uri":"/about/#profil-saya"},{"categories":null,"content":"\rRiwayat Pendidikan\rRekayasa Perangkat Lunak - SMKN 2 Terbanggi Besar2019 - 2021 Saya lulus dari Sekolah Menengah Kejuruan jurusan Rekayasa Perangkat Lunak dengan tepat waktu dan nilai yang cukup memuaskan, disini saya mendapatkan banyak ilmu dasar di bidang teknologi informasi. Mahasiswa Informatika - Universitas Teknokrat Indonesia2022 - Sekarang Saat ini, saya sedang menempuh pendidikan di Jurusan Teknik Informatika di Universitas Teknokrat Indonesia. Selama masa studi saya, saya telah mengambil berbagai mata kuliah dan mendalami keilmuan tentang pemrograman, basis data, jaringan komputer, dan topik-topik lainnya dalam bidang teknologi informasi. ","date":"2024-03-07","objectID":"/about/:2:0","series":null,"tags":null,"title":"About Me","uri":"/about/#riwayat-pendidikan"},{"categories":null,"content":"\rRiwayat Pendidikan\rRekayasa Perangkat Lunak - SMKN 2 Terbanggi Besar2019 - 2021 Saya lulus dari Sekolah Menengah Kejuruan jurusan Rekayasa Perangkat Lunak dengan tepat waktu dan nilai yang cukup memuaskan, disini saya mendapatkan banyak ilmu dasar di bidang teknologi informasi. Mahasiswa Informatika - Universitas Teknokrat Indonesia2022 - Sekarang Saat ini, saya sedang menempuh pendidikan di Jurusan Teknik Informatika di Universitas Teknokrat Indonesia. Selama masa studi saya, saya telah mengambil berbagai mata kuliah dan mendalami keilmuan tentang pemrograman, basis data, jaringan komputer, dan topik-topik lainnya dalam bidang teknologi informasi. ","date":"2024-03-07","objectID":"/about/:2:0","series":null,"tags":null,"title":"About Me","uri":"/about/#rekayasa-perangkat-lunak---smkn-2-terbanggi-besar"},{"categories":null,"content":"\rRiwayat Pendidikan\rRekayasa Perangkat Lunak - SMKN 2 Terbanggi Besar2019 - 2021 Saya lulus dari Sekolah Menengah Kejuruan jurusan Rekayasa Perangkat Lunak dengan tepat waktu dan nilai yang cukup memuaskan, disini saya mendapatkan banyak ilmu dasar di bidang teknologi informasi. Mahasiswa Informatika - Universitas Teknokrat Indonesia2022 - Sekarang Saat ini, saya sedang menempuh pendidikan di Jurusan Teknik Informatika di Universitas Teknokrat Indonesia. Selama masa studi saya, saya telah mengambil berbagai mata kuliah dan mendalami keilmuan tentang pemrograman, basis data, jaringan komputer, dan topik-topik lainnya dalam bidang teknologi informasi. ","date":"2024-03-07","objectID":"/about/:2:0","series":null,"tags":null,"title":"About Me","uri":"/about/#mahasiswa-informatika---universitas-teknokrat-indonesia"},{"categories":null,"content":"\rKeahlian dan Keterampilan Komunikasi \u0026 Kerjasama Team Bahasa Pemrograman: Python, Java, C++, Dart Pengembangan Web: HTML, CSS, JavaScript, PHP Framework: Bootstrap, Flutter Basis Data: MySQL, SQLite Sistem Operasi: Windows, Linux Tools: Git, Visual Studio Code, VIM ","date":"2024-03-07","objectID":"/about/:3:0","series":null,"tags":null,"title":"About Me","uri":"/about/#keahlian-dan-keterampilan"},{"categories":null,"content":"\rMinat dan Motivasi\rMinat dan Motivasi\rSaya tertarik dalam pengembangan perangkat lunak, khususnya dalam pengembangan mobile \u0026 website yang dapat memberikan manfaat bagi pengguna. Saya juga memiliki motivasi yang tinggi dalam terus belajar dan mengembangkan diri di dunia teknologi informasi.\rJika Anda tertarik untuk berkolaborasi atau memiliki pertanyaan lebih lanjut, jangan ragu untuk menghubungi saya di afrandoshareinramadhan@gmail.com atau melalui LinkedIn. Terima kasih telah meluangkan waktu untuk membaca profil saya. ","date":"2024-03-07","objectID":"/about/:4:0","series":null,"tags":null,"title":"About Me","uri":"/about/#minat-dan-motivasi"}]